name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: npm run eslint
      - run: npm run build
      - run: npm run test
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
      - name: Trigger deployment
        if: ${{ github.event_name == 'push' }}
        run: curl https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}
  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Bump version and push tag
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#') }}
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: "patch"
  webhook-notify:
    needs: [tag_release]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - name: Test Success
        uses: Marvv90/discord-notify@1.0.0
        if: ${{ success() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          discord-clr-success: 17cf48
      - name: Test Failure
        uses: Marvv90/discord-notify@1.0.0
        if: ${{ failure() }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          discord-clr-failure: e72727
